#Week 8 - April 20 - 25 
##DAY ONE
###morning lecture: JQuery

[JQuery](http://jquery.com/)
1.x supports older browsers
2.x more modern techniques

Version numbers/semantic versioning: 
* Major/Minor revisions, patch 2.12.2

Minimized vs. unminimized
* [http://code.jquery.com/jquery-1.11.2.min.js](http://code.jquery.com/jquery-1.11.2.min.js)
* [http://code.jquery.com/jquery-1.11.2.js](http://code.jquery.com/jquery-1.11.2.js)

When creating end-user-facing pages, use the lowest possible version to support the most browsers. 

CDN: content delivery network 
* 90% of the time you will not use hosted libraries for a production build
* Check to see whether you have the lbirary in question; else get from CDN 
 
 Exercise: [HTML JQuery 4-20.html](HTML JQuery 4-20.html), [JS JQuery 4-20.js](JS JQuery 4-20.js)
```HTML
	<head>
		<meta charset="utf=8">
		<title>Test HTML</title>
		<meta name = "decription" content="Webpage">
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
		<!-- Make sure jQuery script comes first, or it won't know what to look for-->
		<script src="JS JQuery 4-20.js"></script>
	</head>
```

```JavaScript
$(document).ready(function (){
	alert("Yup, jQuery loaded!");
	$("#someId").append("<p id='stuff'>Here is some text</p>");
});
```
About this JS: 
* document.ready function: runs as soon as page is ready
* bling notation is a JQuery specific action saying "I'm doing something with JQuery"
* In order for this to work: document.ready function must work correctly, 
* document must be ready, jQuery must be installed

Other jQuery functions: 
* .append() - append something as the last child of the indexed element.
* .prepend() - add something as the first child of the indexed element. 
* .after() - sibling below
* .before() - sibling above

What to put in the document.ready: 
* The document.ready would have to contain any function that adds functionality to another object. <--? 
* Any interactive elements should be there
* 'Lightening the load' becomes an interst hre 

"Can't recognize $" -- indicates jQuery isn't loading properly

CSS Reminder: 
* # - declares ID 
* . - declares class

##DAY TWO
###morning lecture
[HTML JQuery 4-21.html](HTML JQuery 4-21.html)
[JQuery 4-21.html](JQuery 4-21.html)
```JavaScript
$(document).ready(function (){ 
	$("#btn").on("click", function() {
		$("#ourList").children().first().next().next().text("Changed!"); 
		//"DOM" traversal - moving through elements to get where we want to go
	});
})
```

.closest -- does what??

Assignment: 

Button: Generate Property
* inserts row (slide down)
* property ID: 4-digitis
* property ID: square footage 
* property ID: price per square foot
* Remove button

Button: Remove
* removes row it's on (slide down)
* prime_peer_jq_02

Hard: 
* add total cost in another column 
Pro: 
* add final column total cost/month

##Day 3
###Morning Lecture
[HTML JQuery 4-21.html](HTML JQuery 4-22.html)
[JQuery 4-21.html](JQuery 4-2.html)
[jQuery 4-22.css](jQuery 4-22.css)

##Day 4
###Afternoon Lecture
[JQuery 4-23.html](JQuery 4-23.html)
[jQuery 4-23.js](jQuery 4-23.js)
[jQuery 4-23.css](jQuery 4-23.css)

Use chained jQuery functions, including delay: 

```JavaScript
$(document).ready(function() {
	$("#goodbyeW").click(function() { //single quote is more 'javascripty', but "string" is good
		$("#helloW").slideUp().delay(600).slideDown();
	});
	$("#goodbyeN").click(function() { //single quote is more 'javascripty', but "string" is good
		$("#helloN").slideUp().slideDown();
	});
});
```

Loops can be used: 
```JavaScript
	$("#goodbyeW").click(function() {
		for (var i=0; i<10; i++){
			$("#helloW").delay(500).slideUp().delay(i*100).slideDown();
		}
	});
```

```JavaScript
	$('li').click(function() {
		$(this).toggleClass('selected');
	});
	$('#goodbyeW').click(function() {
		$('li').removeClass('selected');
	});
```

python -m simpleHTTPserver

##DAY FIVE
###Code Review for group project
script tags on bottom

Using ID and classes: 
* using ID can get very messed up when the backend is added on 
* class ="column js-selection"; can reference both individually (css & js)
	* $('.js-selection')
	* .column {}
* using img src vs. background of a div
* keep numbers "as big as possible" as long as possible; don't round until you're displaying
* maintain flexibility by using constructors over object literal
* <p id="Apple" data-fruit="apple"> value of apple is ... ?  Look into wtf data is here
* $(this).data("fruit")




